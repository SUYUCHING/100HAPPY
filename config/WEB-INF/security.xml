<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
              http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.1.xsd">

    <bean id="springSecurityFilterChain" class="org.springframework.security.util.FilterChainProxy">
		<property name="filterInvocationDefinitionSource">
			<value><![CDATA[
				CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
				PATTERN_TYPE_APACHE_ANT
				/**=httpSessionContextIntegrationFilter,concurrentSessionFilter,logoutFilter,authenticationProcessingFilter,securityContextHolderAwareRequestFilter,rememberMeProcessingFilter,anonymousProcessingFilter,exceptionTranslationFilter
			]]></value>
		</property>
	</bean>

	<bean id="httpSessionContextIntegrationFilter" class="org.springframework.security.context.HttpSessionContextIntegrationFilter"/>

	<bean id="logoutFilter" class="com.aj.module.security.filter.LogoutFilter">
	    <constructor-arg value="/j_spring_security_logout"/> 
		<property name="playerLogoutService"><ref bean="playerLogoutService"/></property>
		<constructor-arg>
			<list>
				<ref bean="rememberMeServices"/>
				<bean class="org.springframework.security.ui.logout.SecurityContextLogoutHandler"/>
			</list>
		</constructor-arg>
	</bean>
	
	<bean id="playerLogoutService" class="com.aj.casino2.player.module.security.service.PlayerUserLogoutServiceImpl">
		<property name="playerHbmDao"><ref bean="playerHbmDao"/></property>
	</bean>
	
	<bean id="concurrentSessionFilter" class="org.springframework.security.concurrent.ConcurrentSessionFilter">
		<property name="sessionRegistry">
			<ref bean="sessionRegistry"/>
		</property>
		<property name="expiredUrl">
			<value>/index.html</value>
		</property>	
	</bean> 
	
	<bean id="authenticationProcessingFilter" class="com.aj.module.security.filter.AuthenticationProcessingFilter"> 
		<property name="authenticationManager"><ref bean="authenticationManager"/></property>
		<property name="authenticationFailureUrl" value="/index.html"/>
		<property name="defaultTargetUrl" value="/secure/home.html"/>
		<property name="filterProcessesUrl" value="/j_spring_security_check"/>
		<property name="rememberMeServices"><ref bean="rememberMeServices"/></property>
		<property name="loginPropertiesSetService">
			<ref bean="loginPropertiesSetService" />
		</property>
		<property name="entityHbmDao"><ref bean="entityHbmDao"/></property>
		<property name="domainType"><value>${domain.type}</value></property>
	</bean>
	
	<bean id="loginPropertiesSetService" class="com.aj.module.security.AfterLoginServiceImpl" >
	  <property name="playerHbmDao"><ref bean="playerHbmDao"/></property>
	  <property name="entityHbmDao"><ref bean="entityHbmDao"/></property>
	</bean>
	
	<bean id="securityContextHolderAwareRequestFilter" class="org.springframework.security.wrapper.SecurityContextHolderAwareRequestFilter"/>

	<bean id="rememberMeProcessingFilter" class="org.springframework.security.ui.rememberme.RememberMeProcessingFilter">
		<property name="authenticationManager"><ref bean="authenticationManager"/></property>
		<property name="rememberMeServices"><ref bean="rememberMeServices"/></property>
	</bean>

	<bean id="anonymousProcessingFilter" class="org.springframework.security.providers.anonymous.AnonymousProcessingFilter">
		<property name="key" value="AJ"/>
		<property name="userAttribute" value="anonymousUser,ROLE_ANONYMOUS"/>
	</bean>

	<bean id="exceptionTranslationFilter" class="org.springframework.security.ui.ExceptionTranslationFilter">
		<property name="authenticationEntryPoint">
			<bean class="org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint">
				<property name="loginFormUrl" value="/login.xhtml"/>
				<property name="forceHttps" value="false"/>
			</bean>
		</property>
		<property name="accessDeniedHandler">
			<bean class="org.springframework.security.ui.AccessDeniedHandlerImpl">
				<property name="errorPage" value="/login.xhtml"/>
			</bean>
		</property>
	</bean>

	<bean id="filterInvocationInterceptor" class="org.springframework.security.intercept.web.FilterSecurityInterceptor">
		<property name="authenticationManager"><ref bean="authenticationManager"/></property>
		<property name="accessDecisionManager">
			<bean class="org.springframework.security.vote.AffirmativeBased">
				<property name="allowIfAllAbstainDecisions" value="false"/>
				<property name="decisionVoters">
					<list>
						<bean class="org.springframework.security.vote.RoleVoter">
							<property name="rolePrefix" value="" />
						</bean>
						<bean class="org.springframework.security.vote.AuthenticatedVoter"/>
					</list>
				</property>
			</bean>
		</property>
		<property name="objectDefinitionSource">
			<value><![CDATA[
				CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
				PATTERN_TYPE_APACHE_ANT
				
				/secure/**=ACL_USER
				
				/**=IS_AUTHENTICATED_ANONYMOUSLY
			]]></value>
		</property>
	</bean>

	<bean id="rememberMeServices" class="org.springframework.security.ui.rememberme.TokenBasedRememberMeServices">
		<property name="userDetailsService"><ref bean="userDetailsService"/></property>
		<property name="key" value="AJ"/>
	</bean>

	<bean id="authenticationManager" class="org.springframework.security.providers.ProviderManager">
		<property name="providers">
			<list>
				<ref bean="daoAuthenticationProvider"/>
				<bean class="org.springframework.security.providers.anonymous.AnonymousAuthenticationProvider">
					<property name="key" value="AJ"/>
				</bean>
				<bean class="org.springframework.security.providers.rememberme.RememberMeAuthenticationProvider">
					<property name="key" value="AJ"/>
				</bean>
			</list>
		</property>
		<property name="sessionController"><ref bean="sessionController"/></property>
	</bean>

	<bean id="daoAuthenticationProvider" class="com.aj.module.security.dao.DaoAuthenticationProvider"> 
		<property name="userDetailsService"><ref bean="userDetailsService"/></property>
		<!-- <property name="passwordEncoder"><bean class="org.springframework.security.providers.encoding.PlaintextPasswordEncoder"/></property> -->
		<property name="passwordEncoder">
			<bean
				class="org.springframework.security.providers.encoding.Md5PasswordEncoder" />
		</property>
		<property name="saltSource">
			<ref bean="saltSource" />
		</property>
	</bean>
	<!--  
	<bean id="saltSource" class="org.springframework.security.providers.dao.salt.ReflectionSaltSource">
		<property name="userPropertyToUse"><value>getUsername</value></property>
   </bean>
   -->
      <bean id="saltSource" class="org.springframework.security.providers.dao.salt.ReflectionSaltSource">
    <property name="userPropertyToUse">
      <value>getLoginUsername</value>
    </property>
  </bean>
   
   <!-- <bean id="userDetailsService" class="org.springframework.security.userdetails.memory.InMemoryDaoImpl">
		<property name="userProperties">
			<bean class="org.springframework.beans.factory.config.PropertiesFactoryBean">
				<property name="location" value="/WEB-INF/users.properties"/>
			</bean>
		</property>
	</bean>-->
	
	<bean id="userDetailsService" class="com.aj.casino2.player.module.security.service.PlayerUserDetailsServiceImpl">
		<property name="playerHbmDao"><ref bean="playerHbmDao"/></property>
		<property name="entityHbmDao"><ref bean="entityHbmDao"/></property>
	</bean>
	

	<!-- <bean id="userSessionService" class="com.aj.web.security.service.UserSessionServiceImpl">
		<property name="userSessionHbmDao"><ref bean="userSessionHbmDao"/></property>
	</bean>
	
	<bean id="autoLoginService" class="com.aj.web.security.service.AutoLoginServiceImpl">
		<property name="userSessionHbmDao"><ref bean="userSessionHbmDao"/></property>
		<property name="sessionRegistry"><ref bean="sessionRegistry"/></property>
		<property name="loginPropertiesSetService">
			<ref bean="loginPropertiesSetService" />
		</property>
	</bean>-->
	
	<bean id="sessionRegistry" class="org.springframework.security.concurrent.SessionRegistryImpl" />
	
	<bean id="sessionController" class="com.aj.module.security.ConcurrentSessionControllerImpl">
        <property name="exceptionIfMaximumExceeded" value="true"/>
        <property name="maximumSessions" value="1" />
        <property name="sessionRegistry"><ref bean="sessionRegistry"/></property>
    </bean> 

	<!-- This bean is optional; it isn't used by any other bean as it only listens and logs -->
	<bean id="loggerListener" class="org.springframework.security.event.authentication.LoggerListener"/>
    
</beans>
